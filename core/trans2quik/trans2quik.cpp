/*
 * trans2quik.cpp
 */

#include "trans2quik.h"
#include <exceptions.h>
#include <string>

#define LOAD_SYMBOL(sym) sym = (decltype(sym))GetProcAddress((HMODULE)m_handle, #sym); if(!sym) throw std::runtime_error("Unable to obtain symbol: " #sym);

Trans2QuikApi::Trans2QuikApi(const std::wstring& dll)
{
	m_handle = GetModuleHandleW(dll.c_str());

	LOAD_SYMBOL(TRANS2QUIK_CONNECT);
	LOAD_SYMBOL(TRANS2QUIK_DISCONNECT);
	LOAD_SYMBOL(TRANS2QUIK_IS_QUIK_CONNECTED);
	LOAD_SYMBOL(TRANS2QUIK_IS_DLL_CONNECTED);
	LOAD_SYMBOL(TRANS2QUIK_SEND_SYNC_TRANSACTION);
	LOAD_SYMBOL(TRANS2QUIK_SEND_ASYNC_TRANSACTION);
	LOAD_SYMBOL(TRANS2QUIK_SET_CONNECTION_STATUS_CALLBACK);
	LOAD_SYMBOL(TRANS2QUIK_SET_TRANSACTIONS_REPLY_CALLBACK);
	LOAD_SYMBOL(TRANS2QUIK_SUBSCRIBE_ORDERS);
	LOAD_SYMBOL(TRANS2QUIK_SUBSCRIBE_TRADES);
	LOAD_SYMBOL(TRANS2QUIK_START_ORDERS);
	LOAD_SYMBOL(TRANS2QUIK_START_TRADES);
	LOAD_SYMBOL(TRANS2QUIK_UNSUBSCRIBE_ORDERS);
	LOAD_SYMBOL(TRANS2QUIK_UNSUBSCRIBE_TRADES);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_DATE);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_SETTLE_DATE);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_TIME);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_IS_MARGINAL);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_ACCRUED_INT);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_YIELD);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_TS_COMMISSION);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_CLEARING_CENTER_COMMISSION);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_EXCHANGE_COMMISSION);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_TRADING_SYSTEM_COMMISSION);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_PRICE2);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_REPO_RATE);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_REPO_VALUE);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_REPO2_VALUE);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_ACCRUED_INT2);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_REPO_TERM);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_START_DISCOUNT);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_LOWER_DISCOUNT);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_UPPER_DISCOUNT);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_BLOCK_SECURITIES);

	LOAD_SYMBOL(TRANS2QUIK_TRADE_CURRENCY);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_SETTLE_CURRENCY);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_SETTLE_CODE);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_ACCOUNT);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_BROKERREF);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_CLIENT_CODE);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_USERID);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_FIRMID);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_PARTNER_FIRMID);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_EXCHANGE_CODE);
	LOAD_SYMBOL(TRANS2QUIK_TRADE_STATION_ID);
}

Trans2QuikApi::~Trans2QuikApi()
{
	CloseHandle(m_handle);
}
